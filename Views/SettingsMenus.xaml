<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <!-- Style pour le contour du menu de réglages -->
    <Style x:Key="SettingsMenuBorder" TargetType="Border">
        <!-- Propriétés de base -->
        <!-- <Setter Property="Height" Value="Auto" />-->
        <Setter Property="Width" Value="Auto" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Tag" Value="SettingsMenuName" />
        <Setter Property="Grid.ColumnSpan" Value="4" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <!-- Utilisation d'un Grid pour superposer l'image en tant qu'arrière-plan -->
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="{ThemeFile 'Images/SettingsBackground.png'}"
                    Stretch="UniformToFill"
                    AlignmentX="Right" AlignmentY="Bottom" />
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="StackPanel"> <!-- No key, so it is implicit and will apply to any child element of type Image -->
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="Width" Value="800" />
                <Setter Property="Margin" Value="20,0,0,0" />
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleY="0.67" ScaleX="0.67"/>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <!-- Déclencheur pour l'animation de l'opacité lors du chargement -->
        <Style.Triggers>
            <EventTrigger RoutedEvent="Window.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <Int32Animation Storyboard.TargetProperty="(Grid.Column)" Duration="0:0:0" To ="0"/>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="0" To="1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>


    <!-- Style pour la section settings -->
    <Style x:Key="SettingsSectionBorder" TargetType="Border">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Margin" Value="100, -50,-400,0" />
        <Setter Property="Opacity" Value="1" />
    </Style>

    <!-- Style pour les boutons du menu de Gauche -->
    <Style x:Key="SettingsMenuButton" BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
        <!-- Propriétés de base -->
        <Setter Property="Margin" Value="-5,0,0,50" />
        <Setter Property="Width" Value="450"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleY="1.5" ScaleX="1.5"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">
                        <Border CornerRadius="0" Opacity="0.4" Background="Transparent"
                            x:Name="MainBackground" />
                        <Border x:Name="MainBorder" Margin="-5"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Style="{DynamicResource SolidBorderLightBrush}" Tag="False"
                            BorderThickness="3" CornerRadius="0" Visibility="Collapsed" />
                        <TextBlock x:Name="Text" Style="{DynamicResource ButtonTextBlockBaseStyle}"
                            Foreground="{TemplateBinding Foreground}" FontWeight="SemiBold"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="10,0">
                            <ContentPresenter />
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <!-- <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" /> -->
                            <Setter Property="Tag" Value="True" TargetName="MainBorder" />
                            <Setter Property="Visibility" Value="Visible" TargetName="MainBorder" />
                            <Setter Property="Opacity" Value="1" TargetName="MainBackground" />
                            <!-- <Setter Property="Background" Value="White" TargetName="MainBackground" /> -->
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="MainBorder" />
                            <!-- <Setter Property="Background" Value="White" TargetName="MainBackground" /> -->
                            <!-- <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" /> -->
                            <Setter Property="Opacity" Value="1" TargetName="MainBackground" />
                            <Setter Property="Tag" Value="True" TargetName="MainBorder" />
                        </Trigger>
                        <!-- <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Transparent" />
                        </Trigger> -->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Modèle de données pour l'en-tête du menu de réglages -->
    <DataTemplate x:Key="SettingsMenuHeaderTemplate">
        <!-- Conteneur parent avec une largeur automatique -->
        <Grid HorizontalAlignment="Stretch">
            <Grid.RenderTransform>
                <ScaleTransform ScaleY="1.5" ScaleX="1.5"/>
            </Grid.RenderTransform>
            <!-- Contenu de l'en-tête -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left"
                VerticalAlignment="Top" Margin="0,0,0,40" Background="Transparent" Height="110">
                <TextBlock Text="{DynamicResource LOCSettingsLabel}" VerticalAlignment="Top"
                    HorizontalAlignment="Left"
                    TextAlignment="Center"
                    Style="{DynamicResource ThemeTextBlockBaseStyle}"
                    Typography.Capitals="AllSmallCaps"
                    Margin="0,10,0,0" Width="300">
                    <TextBlock.RenderTransform>
                        <ScaleTransform ScaleY="1.025"  ScaleX="1.5"/>
                    </TextBlock.RenderTransform>
                </TextBlock>
                <!-- Ligne de séparation -->
                <!-- Logo Settings -->
                <Image Source="{ThemeFile 'Images/ASUS/rog-eye.png'}" Height="80"
                    RenderOptions.BitmapScalingMode="Fant" HorizontalAlignment="Center"
                    Margin="600,10,-550,30" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!-- Épaisseur pour l'espacement des éléments de section -->
    <Thickness x:Key="SettingsSectionItemSpacing">0,12,10,10</Thickness>

    <!-- Style pour le curseur de section -->
    <Style x:Key="SettingsSectionSlider" TargetType="SliderEx"
        BasedOn="{StaticResource {x:Type SliderEx}}">
        <Setter Property="Width" Value="300" />
        <Setter Property="Margin" Value="{DynamicResource SettingsSectionItemSpacing}" />
    </Style>

    <!-- Style pour la case à cocher de section -->
    <Style x:Key="SettingsSectionCheckbox" TargetType="CheckBoxEx">
        <!-- Styles et modèles -->
        <Setter Property="Margin" Value="{DynamicResource SettingsSectionItemSpacing}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <!-- <Setter Property="Height" Value="50" /> -->
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Background="{TemplateBinding Background}">
                        <Border x:Name="MainBorder" Margin="0" CornerRadius="0" BorderThickness="3"
                            Opacity="1" Style="{DynamicResource SolidBorderLightBrush}" Tag="False"
                            Visibility="Collapsed">
                        </Border>
                        <Border x:Name="FlashMenuBorder" Margin="5"
                            Style="{DynamicResource AnimatedFlashMenu}" Tag="False"
                            Visibility="Collapsed">
                        </Border>
                        <Grid Margin="10,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="Text" Style="{DynamicResource TextBlockBaseStyle}"
                                Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="0,0,20,10"
                                Grid.Column="0" TextTrimming="WordEllipsis">
                                <ContentPresenter RecognizesAccessKey="True" />
                            </TextBlock>
                            <Border Background="Transparent"
                                VerticalAlignment="Center"
                                Grid.Column="1" >
                                <Viewbox x:Name="CheckIcon">
                                    <TextBlock Text="&#xeffc;"
                                        FontFamily="{DynamicResource FontIcoFont}"
                                        Foreground="{TemplateBinding Foreground}"
                                        FontSize="{DynamicResource FontSizeLarge}"
                                        x:Name="IconText" HorizontalAlignment="Center"
                                        VerticalAlignment="Center" Opacity="0.4" />
                                </Viewbox>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Text" Value="&#xf00d;" TargetName="IconText" />
                            <Setter Property="Opacity" Value="1" TargetName="IconText" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Tag" Value="True" TargetName="MainBorder" />
                            <Setter Property="Tag" Value="True" TargetName="FlashMenuBorder" />
                            <Setter Property="Visibility" Value="Visible" TargetName="MainBorder" />
                            <Setter Property="Visibility" Value="Visible"
                                TargetName="FlashMenuBorder" />
                            <Setter Property="Opacity" Value="1" TargetName="IconText" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}"
                                TargetName="IconText" />
                            <Setter Property="Opacity" Value="1" TargetName="IconText" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style pour la liste déroulante de section -->
    <Style x:Key="SettingsSectionCombobox" TargetType="ComboBoxEx"
        BasedOn="{StaticResource {x:Type ComboBoxEx}}">
        <Setter Property="MinWidth" Value="400" />
        <Setter Property="Margin" Value="{DynamicResource SettingsSectionItemSpacing}" />
        <Style.Resources>
            <Style x:Key="ComboBoxTextStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="{DynamicResource FontSizeLarge}" />
                <Setter Property="FontFamily" Value="{DynamicResource FontThemeMain}" />
                <Setter Property="Foreground" Value="{DynamicResource TextDetailBrush}" />
            </Style>
            <Style x:Key="ComboBoxIconStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="{DynamicResource FontSizeLarge}"  />
                <Setter Property="FontFamily" Value="{DynamicResource FontIcoFont}" />
                <Setter Property="Foreground" Value="{DynamicResource SelectionLightBrush}" />
            </Style>
        </Style.Resources>
    </Style>

    <!-- Style pour le texte de section -->
    <Style x:Key="SettingsSectionText" TargetType="TextBlock"
        BasedOn="{StaticResource TextBlockBaseStyle}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,0,10" />
    </Style>

    <!-- Modèles de données pour les boutons du menu de réglages -->
    <DataTemplate x:Key="SettingsMenuGeneralButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <!-- Texte du bouton "Général" -->
            <TextBlock Text="{DynamicResource LOCSettingsFSSectionGeneral}"
                VerticalAlignment="Center" Margin="5,0,0,0" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="SettingsMenuVisualsButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <!-- Texte du bouton "Visuals" -->
            <TextBlock Text="{DynamicResource LOCSettingsFSSectionVisuals}"
                VerticalAlignment="Center" Margin="5,0,0,0" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="SettingsMenuAudioButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <!-- Texte du bouton "Audio" -->
            <TextBlock Text="{DynamicResource LOCSettingsFSSectionAudio}" VerticalAlignment="Center"
                Margin="5,0,0,0" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="SettingsMenuLayoutButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <!-- Texte du bouton "Layout" -->
            <TextBlock Text="{DynamicResource LOCSettingsFSSectionLayout}"
                VerticalAlignment="Center" Margin="5,0,0,0" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="SettingsMenuMenusButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <!-- Texte du bouton "Menus" -->
            <TextBlock Text="{DynamicResource LOCSettingsFSSectionMenus}" VerticalAlignment="Center"
                Margin="5,0,0,0" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="SettingsMenuInputButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <!-- Texte du bouton "Input" -->
            <TextBlock Text="{DynamicResource LOCSettingsFSSection}" VerticalAlignment="Center"
                Margin="5,0,0,0" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="SettingsMenuThemeOptionsButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{DynamicResource LOCThemeOptionsSettingsMenu}"
                VerticalAlignment="Center" Margin="5,0,0,0" />
        </StackPanel>
    </DataTemplate>

    <Style TargetType="Grid" x:Key="ThemeOptionsPreviewImageGridStyle">
        <Setter Property="Margin" Value="-680,550,0,-650" />
        <Setter Property="Width" Value="550" />
        <Setter Property="Height" Value="550" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style TargetType="Image" x:Key="ThemeOptionsPreviewImageStyle">
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <Style x:Key="SettingsSectionInputBoxStyle" TargetType="{x:Type ButtonEx}" BasedOn="{StaticResource {x:Type ButtonEx}}">
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="MinWidth" Value="600" />
        <Setter Property="Margin"  Value="0,0,0,0" />
    </Style>

    <DataTemplate x:Key="SettingsSectionInputBoxTemplate">
        <DockPanel Margin="0,-10,0,-10" MinWidth="{Binding MinWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ButtonEx}}}">
            <Viewbox DockPanel.Dock="Right" Height="{DynamicResource FontSizeMedium}"  Margin="20,0,0,0">
                <TextBlock Text="&#xec55;" FontFamily="{StaticResource FontIcoFont}"
                           Foreground="{DynamicResource TextBrush}"
                           FontSize="{DynamicResource FontSize}"
                           VerticalAlignment="Center"/>
            </Viewbox>
            <TextBlock  DockPanel.Dock="Left"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        FontFamily="{DynamicResource FontThemeMain}">
                <ContentPresenter Content="{Binding}" />
            </TextBlock>
        </DockPanel>
    </DataTemplate>


</ResourceDictionary>